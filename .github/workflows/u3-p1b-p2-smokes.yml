name: U3-P1b/P2 Smoke Tests

on:
  workflow_dispatch:

jobs:
  smoke:
    runs-on: ubuntu-latest
    continue-on-error: true
    concurrency:
      group: "${{ github.workflow }}-${{ github.ref }}-${{ github.run_id }}"
      cancel-in-progress: false
    env:
      PYTHONWARNINGS: 'ignore::PendingDeprecationWarning'
      PYTHONPATH: .
      PIP_CONSTRAINT: constraints/py312.txt
      PIP_DISABLE_PIP_VERSION_CHECK: '1'
      PIP_NO_INPUT: '1'
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      SMOKE_TOKEN: ${{ secrets.SMOKE_TOKEN }}
      STORAGE_BACKEND: file
      STORAGE_BASE_URI: file:///home/runner/work/_temp/uploads
      MAX_UPLOAD_MB: 25
    strategy:
      matrix:
        suite: [upload, programmatic, worker, mail, mail_connectors, read_ops, publisher]
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
      - name: Pre-pin critical wheels (no-deps)
        run: |
          python -m pip install --upgrade pip
          pip install --no-deps \
            "wrapt>=1.17.0,<2" \
            "typing-extensions==4.15.0" \
            "importlib-metadata==8.1.0" \
            "opencv-python-headless==4.11.0.86" \
            "onnxruntime==1.18.0"
      - name: Install deps (respect constraints)
        run: |
          pip install -c constraints/py312.txt -r requirements.txt -r requirements-dev.txt
      - name: Prepare storage dir
        run: mkdir -p /home/runner/work/_temp/uploads artifacts
      - name: Run smoke tests (matrix)
        run: |
          set -euo pipefail
          PYTEST_COMMON_OPTS="-q -W ignore::PendingDeprecationWarning"
          run_pytest() {
            suite_name="$1"
            shift
            if ! pytest $PYTEST_COMMON_OPTS "$@"; then
              status=$?
              if [ "$status" -ne 5 ]; then
                echo "Suite ${suite_name} failed with exit code ${status}"
                exit "$status"
              fi
              echo "Suite ${suite_name}: pytest returned exit code 5 (no tests collected) â†’ treating as success."
            fi
          }
          if [ "${{ matrix.suite }}" = "upload" ]; then run_pytest "upload" tests/smoke/test_upload_api_smoke.py --junitxml artifacts/u3-p1b-smoke.xml; fi
          if [ "${{ matrix.suite }}" = "programmatic" ]; then run_pytest "programmatic" tests/smoke/test_programmatic_ingest_smoke.py --junitxml artifacts/u3-p2-programmatic-smoke.xml; fi
          if [ "${{ matrix.suite }}" = "worker" ]; then run_pytest "worker" tests/smoke/test_worker_inbox_smoke.py --junitxml artifacts/u4-p1-worker-smoke.xml; fi
          if [ "${{ matrix.suite }}" = "mail" ]; then run_pytest "mail" tests/smoke/test_mail_ingest_smoke.py --junitxml artifacts/u5-m-mail-ingest-smoke.xml; fi
          if [ "${{ matrix.suite }}" = "mail_connectors" ]; then run_pytest "mail_connectors" tests/smoke/test_mail_connectors_integration.py --junitxml artifacts/u10-mail-connectors-smoke.xml; fi
          if [ "${{ matrix.suite }}" = "read_ops" ]; then run_pytest "read_ops" tests/smoke/test_read_ops_api_smoke.py --junitxml artifacts/u5-r-read-ops-smoke.xml; fi
          if [ "${{ matrix.suite }}" = "publisher" ]; then run_pytest "publisher" tests/smoke/test_outbox_publisher_smoke.py --junitxml artifacts/u6-outbox-publisher-smoke.xml; fi
      - name: Inspect artifacts (debug)
        run: |
          echo "Workspace:"; ls -la
          echo "Artifacts dir:"; ls -la artifacts || true
          for f in artifacts/u3-p1b-smoke.xml artifacts/u3-p1b-smoke.json artifacts/u3-p2-programmatic-smoke.xml artifacts/u3-p2-programmatic-smoke.json artifacts/u4-p1-worker-smoke.xml artifacts/u4-p1-worker-smoke.json artifacts/u5-m-mail-ingest-smoke.xml artifacts/u5-m-mail-ingest-smoke.json artifacts/u5-r-read-ops-smoke.xml artifacts/u6-outbox-publisher-smoke.xml; do
            echo "---- $f ----"
            [ -e "$f" ] && file "$f" && head -c 200 "$f" || echo "MISSING: $f"
          done
      - name: Create artifact bundle
        run: |
          mkdir -p artifacts/archive
          for f in artifacts/u3-p1b-smoke.xml artifacts/u3-p1b-smoke.json artifacts/u3-p2-programmatic-smoke.xml artifacts/u3-p2-programmatic-smoke.json artifacts/u4-p1-worker-smoke.xml artifacts/u4-p1-worker-smoke.json artifacts/u5-m-mail-ingest-smoke.xml artifacts/u5-m-mail-ingest-smoke.json artifacts/u5-r-read-ops-smoke.xml artifacts/u6-outbox-publisher-smoke.xml; do
            if [ -f "$f" ]; then
              cp "$f" artifacts/archive/
            fi
          done
          if [ -z "$(find artifacts/archive -type f -print -quit)" ]; then
            echo "no-artifacts" > artifacts/archive/placeholder.txt
          fi
          tar -czf artifacts/smoke-artifacts.tar.gz -C artifacts/archive .
      - name: Upload artifact bundle
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: u3-p1b-smoke-artifacts
          path: artifacts/smoke-artifacts.tar.gz
