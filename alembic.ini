# A generic, single database configuration.

[alembic]
# path to migration scripts
script_location = ops/alembic

# template used to generate migration files
# file_template = %%(rev)s_%%(slug)s

# sys.path path, will be prepended to sys.path if present.
# defaults to the current working directory.
prepend_sys_path = .

# timezone to use when rendering the date within the migration file
# as well as the filename.
# If specified, it must be a string that will be passed to a
# DateTime constructor,
# e.g. mydatabase. Defaults to None.
timezone = UTC

# max length of characters to apply to the
# "slug" field
truncate_slug_length = 40

# set to 'true' to run the environment file as a synchronous callable
# sourceless = false

# revision environment configuration, most importantly
# revision_context is the Base class used by alembic
# to configure how revisions are constructed.  In alembic 1.3,
# revision_context was split into two classes:
# MigrationContext and RevisionContext classes, with
# MigrationContext taking over the role of producing
# the table information and connections, and RevisionContext
# handling the revision construction, selection and inspection.
# revision_context_class = alembic.context.RevisionContext

# if enabled, filesystem revision files are assumed to be in the
# revision environment.
# sourceless = false

# set to 'true' to search for revision files in the script_location
# revision_environment = false

# version path separator; defaults to os.sep
# version_path_separator = os

# set to 'true' to order directory scans, which avoids filesystem
# dependency but requires slower walking.
# sourceless = false

# set to 'true' to install RevisionPlugin directives into the sqlalchemy module
sqlalchemy.url = postgresql+psycopg://postgres.bejgadxoavranskeaqww:oyYZwhOjucx4ZNTM@aws-0-eu-central-1.pooler.supabase.com:6543/postgres?sslmode=require

# the output encoding used when revision files are written from script.py.mako
# output_encoding = utf-8

# set to 'true' when using a synchronous callable for the revision environment
# sourceless = true

[post_write_hooks]
# post_write_hooks defines scripts or Python functions that are run
# on newly generated revision scripts.  See the documentation for further
# detail and examples

# keys are script names, values are functions
# update_module_docstring = alembic.operations.ops:__set_docstring

# Logging configuration
[loggers]
keys = root,sqlalchemy,alembic

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = console
qualname =

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine

[logger_alembic]
level = INFO
handlers =
qualname = alembic

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S
