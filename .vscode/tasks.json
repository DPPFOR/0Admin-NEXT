{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "E-Invoice: Generate (Tenant)",
      "type": "shell",
      "command": "bash",
      "args": [
        "-lc",
        "set -a; source .env; set +a; python tools/einvoice/generate.py --tenant ${input:tenantId} --count ${input:einvoiceCount} --format ${input:einvoiceFormat} --now ${input:einvoiceNow} --verbose"
      ],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "E-Invoice: Approve (Tenant)",
      "type": "shell",
      "command": "bash",
      "args": [
        "-lc",
        "set -a; source .env; set +a; python tools/einvoice/approve.py --tenant ${input:tenantId} --invoice-no ${input:einvoiceInvoiceNo} --format ${input:einvoiceFormat} --actor ${input:einvoiceActor} --comment ${input:einvoiceComment}"
      ],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "E-Invoice: Export (Tenant)",
      "type": "shell",
      "command": "bash",
      "args": [
        "-lc",
        "set -a; source .env; set +a; python tools/einvoice/export.py --tenant ${input:tenantId} --invoice-no ${input:einvoiceInvoiceNo} --format ${input:einvoiceFormat} --dest ${input:einvoiceExportDest} --include-audit"
      ],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "Mahnwesen: Dry-Run (Flock)",
      "type": "shell",
      "command": "python",
      "args": [
        "tools/flock/playbook_mahnwesen.py",
        "--tenant",
        "00000000-0000-0000-0000-000000000001",
        "--dry-run",
        "--limit",
        "25"
      ],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "Mahnwesen: DB-Smoke (Flock, RLS-ON)",
      "type": "shell",
      "command": "python",
      "args": [
        "-m",
        "pytest",
        "-q",
        "tests/agents_mahnwesen/test_flow_smoke_localdb.py"
      ],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": [],
      "options": {
        "env": {
          "RUN_DB_TESTS": "1"
        }
      }
    },
    {
      "label": "Mahnwesen: Dry-Run (Go-Live)",
      "type": "shell",
      "command": "python",
      "args": [
        "tools/flock/playbook_mahnwesen.py",
        "--tenant",
        "00000000-0000-0000-0000-000000000001",
        "--dry-run",
        "--limit",
        "50",
        "--verbose"
      ],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "DB: Migrate",
      "type": "shell",
      "command": "alembic",
      "args": [
        "-c",
        "alembic.ini",
        "upgrade",
        "head"
      ],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": [],
      "options": {
        "env": {
          "TZ": "UTC",
          "PYTHONHASHSEED": "0"
        }
      }
    },
    {
      "label": "Inbox: Smoke (offline)",
      "type": "shell",
      "command": "python",
      "args": [
        "-m",
        "pytest",
        "-q",
        "tests/inbox",
        "-k",
        "smoke or idempotent or views or audit or logger"
      ],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": [],
      "options": {
        "env": {
          "TZ": "UTC",
          "PYTHONHASHSEED": "0"
        }
      }
    },
    {
      "label": "Inbox: Views check",
      "type": "shell",
      "command": "python",
      "args": [
        "-c",
        "import os; from sqlalchemy import create_engine, text; e = create_engine(os.environ['DATABASE_URL'], future=True); print('Views check:'); with e.begin() as c: v1 = c.execute(text('SELECT COUNT(*) FROM inbox_parsed.v_inbox_by_tenant')).scalar(); v2 = c.execute(text('SELECT COUNT(*) FROM inbox_parsed.v_invoices_latest')).scalar(); print(f'v_inbox_by_tenant: {v1} rows'); print(f'v_invoices_latest: {v2} rows')"
      ],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "MVR: Dry-Run (Tenant)",
      "type": "shell",
      "command": "python",
      "args": [
        "-c",
        "from agents.mahnwesen.playbooks import DunningPlaybook, DunningContext; from agents.mahnwesen.config import DunningConfig; config = DunningConfig.from_tenant('00000000-0000-0000-0000-000000000001'); context = DunningContext(tenant_id='00000000-0000-0000-0000-000000000001', correlation_id='test-dry-run', dry_run=True, config=config); playbook = DunningPlaybook(config); result = playbook.run_once(context); print(f'Dry-run result: {result.notices_created} notices, {result.events_dispatched} events')"
      ],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "options": {
        "env": {
          "TZ": "UTC",
          "PYTHONHASHSEED": "0"
        }
      }
    },
    {
      "label": "MVR: Templates Validate",
      "type": "shell",
      "command": "python",
      "args": [
        "-m",
        "pytest",
        "-q",
        "tests/agents_mahnwesen/test_templates_*",
        "-v"
      ],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": [],
      "options": {
        "env": {
          "TZ": "UTC",
          "PYTHONHASHSEED": "0"
        }
      }
    },
    {
      "label": "MVR: Dispatch Dry-Run (Tenant)",
      "type": "shell",
      "command": "python",
      "args": [
        "-m",
        "pytest",
        "-q",
        "tests/agents_mahnwesen/test_dispatch_*",
        "-v"
      ],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": [],
      "options": {
        "env": {
          "TZ": "UTC",
          "PYTHONHASHSEED": "0"
        }
      }
    },
    {
      "label": "MVR: MVR Preview (Tenant)",
      "type": "shell",
      "command": "python",
      "args": [
        "tools/flock/playbook_mahnwesen.py",
        "--tenant",
        "${input:tenantId}",
        "--preview",
        "--verbose"
      ],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": [],
      "options": {
        "env": {
          "TZ": "UTC",
          "PYTHONHASHSEED": "0"
        }
      }
    },
    {
      "label": "MVR: Approve (Tenant)",
      "type": "shell",
      "command": "python",
      "args": [
        "tools/flock/playbook_mahnwesen.py",
        "--tenant",
        "${input:tenantId}",
        "--approve",
        "${input:noticeId}",
        "--comment",
        "${input:approvalComment}"
      ],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": [],
      "options": {
        "env": {
          "TZ": "UTC",
          "PYTHONHASHSEED": "0"
        }
      }
    },
    {
      "label": "MVR: Live Send (Tenant)",
      "type": "shell",
      "command": "python",
      "args": [
        "tools/flock/playbook_mahnwesen.py",
        "--tenant",
        "${input:tenantId}",
        "--live",
        "--verbose"
      ],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": [],
      "options": {
        "env": {
          "TZ": "UTC",
          "PYTHONHASHSEED": "0"
        }
      }
    },
    {
      "label": "MVR: Daily KPIs (All Tenants)",
      "type": "shell",
      "command": "bash",
      "args": [
        "-lc",
        "set -a; source .env; set +a; python tools/operate/kpi_engine.py --all-tenants --notify"
      ],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": [],
      "options": {
        "env": {
          "TZ": "UTC",
          "PYTHONHASHSEED": "0"
        }
      }
    },
    {
      "label": "Operate: Emit Alerts (Dry-Run)",
      "type": "shell",
      "command": "bash",
      "args": [
        "-lc",
        "set -a; source .env; set +a; python tools/operate/alert_emitter.py --tenant ${input:tenantId} --metric ${input:alertMetric} --value ${input:alertValue} --trace-id ${input:alertTraceId}"
      ],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": [],
      "options": {
        "env": {
          "TZ": "UTC",
          "PYTHONHASHSEED": "0"
        }
      }
    },
    {
      "label": "Operate: Canary Check",
      "type": "shell",
      "command": "bash",
      "args": [
        "-lc",
        "set -a; source .env; set +a; python tools/operate/canary_decision.py --tenant ${input:tenantId} --success-rate ${input:canarySuccess} --error-rate ${input:canaryError} --dlq-depth ${input:canaryDlq} --hard-bounce-rate ${input:canaryBounce} --trace-id ${input:canaryTrace}"
      ],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": [],
      "options": {
        "env": {
          "TZ": "UTC",
          "PYTHONHASHSEED": "0"
        }
      }
    },
    {
      "label": "Operate: Backout (Kill-Switch)",
      "type": "shell",
      "command": "bash",
      "args": [
        "-lc",
        "set -a; source .env; set +a; python tools/operate/kill_switch.py --tenant ${input:tenantId} --reason ${input:killSwitchReason} --trace-id ${input:killSwitchTrace}"
      ],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": [],
      "options": {
        "env": {
          "TZ": "UTC",
          "PYTHONHASHSEED": "0"
        }
      }
    },
    {
      "label": "MVR: Bounce Reconcile (All Tenants)",
      "type": "shell",
      "command": "bash",
      "args": [
        "-lc",
        "set -a; source .env; set +a; python tools/operate/bounce_reconcile.py --all-tenants --notify"
      ],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": [],
      "options": {
        "env": {
          "TZ": "UTC",
          "PYTHONHASHSEED": "0"
        }
      }
    },
    {
      "label": "MVR: KPI + Reconcile (07:30 CET) – Dry-Run",
      "type": "shell",
      "command": "bash",
      "args": [
        "-lc",
        "set -a; source .env; set +a; python tools/operate/kpi_engine.py --all-tenants --dry-run --notify && python tools/operate/bounce_reconcile.py --all-tenants --dry-run --notify"
      ],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": [],
      "options": {
        "env": {
          "TZ": "UTC",
          "PYTHONHASHSEED": "0"
        }
      }
    },
    {
      "label": "Operate: Sender/DNS Check (Tenant)",
      "type": "shell",
      "command": "bash",
      "args": [
        "-lc",
        "set -a; source .env; set +a; python tools/operate/sender_dns_check.py --tenant ${input:tenantId} --domain ${input:tenantDomain}"
      ],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": [],
      "options": {
        "env": {
          "TZ": "UTC",
          "PYTHONHASHSEED": "0"
        }
      }
    },
    {
      "label": "Operate: Sender Policy Probe (Tenant)",
      "type": "shell",
      "command": "bash",
      "args": [
        "-lc",
        "set -a; source .env; set +a; python tools/operate/sender_policy_probe.py --tenant ${input:tenantId}"
      ],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": [],
      "options": {
        "env": {
          "TZ": "UTC",
          "PYTHONHASHSEED": "0"
        }
      }
    },
    {
      "label": "Operate: Redaction Probe",
      "type": "shell",
      "command": "bash",
      "args": [
        "-lc",
        "set -a; source .env; set +a; python tools/operate/redaction_probe.py"
      ],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": [],
      "options": {
        "env": {
          "TZ": "UTC",
          "PYTHONHASHSEED": "0"
        }
      }
    },
    {
      "label": "Operate: Canary Decide (Tenant)",
      "type": "shell",
      "command": "bash",
      "args": [
        "-lc",
        "set -a; source .env; set +a; python tools/operate/canary_engine.py --tenant ${input:tenantId}"
      ],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": [],
      "options": {
        "env": {
          "TZ": "UTC",
          "PYTHONHASHSEED": "0"
        }
      }
    },
    {
      "label": "Operate: Canary Rollout (Tenant)",
      "type": "shell",
      "command": "bash",
      "args": [
        "-lc",
        "set -a; source .env; set +a; python tools/operate/canary_rollout.py --tenant ${input:tenantId}"
      ],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": [],
      "options": {
        "env": {
          "TZ": "UTC",
          "PYTHONHASHSEED": "0"
        }
      }
    },
    {
      "label": "Operate: Canary Full Cycle (Decide→Rollout)",
      "type": "shell",
      "command": "bash",
      "args": [
        "-lc",
        "set -a; source .env; set +a; python tools/operate/canary_engine.py --tenant ${input:tenantId} && python tools/operate/canary_rollout.py --tenant ${input:tenantId}"
      ],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": [],
      "options": {
        "env": {
          "TZ": "UTC",
          "PYTHONHASHSEED": "0"
        }
      }
    },
    {
      "label": "Operate: Morning Run (Tenant)",
      "type": "shell",
      "command": "bash",
      "args": [
        "-lc",
        "set -a; source .env; set +a; python tools/operate/morning_operate.py --tenant ${input:tenantId}"
      ],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": [],
      "options": {
        "env": {
          "TZ": "UTC",
          "PYTHONHASHSEED": "0"
        }
      }
    },
    {
      "label": "Operate: Morning Run (All Tenants)",
      "type": "shell",
      "command": "bash",
      "args": [
        "-lc",
        "set -a; source .env; set +a; python tools/operate/morning_operate.py --all-tenants"
      ],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": [],
      "options": {
        "env": {
          "TZ": "UTC",
          "PYTHONHASHSEED": "0"
        }
      }
    },
    {
      "label": "Operate: Morning Run – Dry-Run",
      "type": "shell",
      "command": "bash",
      "args": [
        "-lc",
        "set -a; source .env; set +a; python tools/operate/morning_operate.py --all-tenants --dry-run"
      ],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": [],
      "options": {
        "env": {
          "TZ": "UTC",
          "PYTHONHASHSEED": "0"
        }
      }
    },
    {
      "label": "E-Invoice: Morning Operate (Dry-Run)",
      "type": "shell",
      "command": "bash",
      "args": [
        "-lc",
        "set -a; source .env; set +a; python tools/operate/einvoice_morning.py --tenant ${input:tenantId} --dry-run"
      ],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": [],
      "options": {
        "env": {
          "TZ": "UTC",
          "PYTHONHASHSEED": "0"
        }
      }
    },
    {
      "label": "E-Invoice: Morning Operate (Live)",
      "type": "shell",
      "command": "bash",
      "args": [
        "-lc",
        "set -a; source .env; set +a; python tools/operate/einvoice_morning.py --tenant ${input:tenantId}"
      ],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": [],
      "options": {
        "env": {
          "TZ": "UTC",
          "PYTHONHASHSEED": "0"
        }
      }
    }
  ],
  "inputs": [
    {
      "id": "tenantId",
      "type": "promptString",
      "description": "Tenant ID (UUID)",
      "default": "00000000-0000-0000-0000-000000000001"
    },
    {
      "id": "einvoiceFormat",
      "type": "pickString",
      "description": "E-Invoice Format",
      "options": ["facturx", "xrechnung"],
      "default": "facturx"
    },
    {
      "id": "einvoiceCount",
      "type": "promptString",
      "description": "Anzahl Rechnungen",
      "default": "10"
    },
    {
      "id": "einvoiceNow",
      "type": "promptString",
      "description": "ISO-8601 Timestamp (UTC)",
      "default": "2025-01-01T00:00:00+00:00"
    },
    {
      "id": "einvoiceInvoiceNo",
      "type": "promptString",
      "description": "Invoice Nummer (ohne Suffix)"
    },
    {
      "id": "einvoiceActor",
      "type": "promptString",
      "description": "Approval Actor",
      "default": "operate"
    },
    {
      "id": "einvoiceComment",
      "type": "promptString",
      "description": "Approval Comment"
    },
    {
      "id": "einvoiceExportDest",
      "type": "promptString",
      "description": "Export Zielverzeichnis",
      "default": "./exports"
    },
    {
      "id": "noticeId",
      "type": "promptString",
      "description": "Notice ID"
    },
    {
      "id": "approvalComment",
      "type": "promptString",
      "description": "Approval/Rejection Comment (required)"
    },
    {
      "id": "alertMetric",
      "type": "promptString",
      "description": "Alert metric (e.g. error_rate, dlq_depth)",
      "default": "error_rate"
    },
    {
      "id": "alertValue",
      "type": "promptString",
      "description": "Metric value",
      "default": "0.05"
    },
    {
      "id": "alertTraceId",
      "type": "promptString",
      "description": "Trace ID for alert",
      "default": "alert-trace"
    },
    {
      "id": "canarySuccess",
      "type": "promptString",
      "description": "Success rate (0-1)",
      "default": "0.98"
    },
    {
      "id": "canaryError",
      "type": "promptString",
      "description": "Error rate (0-1)",
      "default": "0.005"
    },
    {
      "id": "canaryDlq",
      "type": "promptString",
      "description": "DLQ depth",
      "default": "0"
    },
    {
      "id": "canaryBounce",
      "type": "promptString",
      "description": "Hard bounce rate (0-1)",
      "default": "0.02"
    },
    {
      "id": "canaryTrace",
      "type": "promptString",
      "description": "Trace ID for canary decision",
      "default": "canary-trace"
    },
    {
      "id": "killSwitchReason",
      "type": "promptString",
      "description": "Backout reason",
      "default": "Manual backout"
    },
    {
      "id": "killSwitchTrace",
      "type": "promptString",
      "description": "Trace ID for kill switch",
      "default": "kill-trace"
    },
    {
      "id": "tenantDomain",
      "type": "promptString",
      "description": "Tenant mail domain",
      "default": "example.com"
    }
  ]
}