[build-system]
requires = ["setuptools>=64", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "0admin-next"
version = "0.1.0"
description = "Backend- und Agentenbasis fÃ¼r 0Admin-NEXT"
readme = "README.md"
requires-python = ">=3.12,<3.13"
authors = [{ name = "0Admin Team" }]
license = { text = "Proprietary" }
keywords = ["automation", "agents", "backend"]
dependencies = [
  "flock-core==0.5.3",
  "fastapi>=0.111,<1",
  "uvicorn[standard]>=0.30,<1",
  "pydantic>=2.7,<3",
  "python-dotenv>=1.0,<2",
  "SQLAlchemy>=2.0,<3",
  "alembic>=1.13,<2",
  "psycopg[binary]>=3.2,<4",
  "Jinja2>=3.1,<4",
  "httpx>=0.28.1",
  "python-magic>=0.4.27 ; platform_system != \"Windows\"",
  "python-magic-bin>=0.4.14 ; platform_system == \"Windows\"",
  "filetype>=1.2.0",
  "markitdown>=0.1.3",
  "markdown-it-py>=4.0.0",
  "html5lib>=1.1",
  "pandas==2.3.*",
  "openpyxl>=3.1.5",
  "pyxlsb>=1.0.10",
  "frictionless>=5.18.1",
  "pandera>=0.26.1",
  "python-docx>=1.2.0",
  "python-pptx>=1.0.2",
  "pypdf>=4.0.0",
  "pdfminer.six>=20231228",
  "pytesseract>=0.3.13",
  "pillow>=10.0.0",
  "ocrmypdf>=16.0.0",
  "camelot-py==0.11.0",
  "tabula-py>=2.9.0",
  "playwright>=1.55.0",
  "msal>=1.34.0",
  "msgraph-sdk>=1.46.0",
  "presidio-analyzer>=2.2.360",
  "scrubadub>=2.0.1",
  "py7zr>=1.0.0",
  "libarchive-c>=5.3"
]

[project.optional-dependencies]
dev = [
  "pytest>=8.3,<9",
  "pytest-asyncio>=0.23,<1",
  "pytest-cov>=5,<6",
  "ruff>=0.6,<1",
  "black>=24.8,<25",
  "mypy>=1.11,<2",
  "jsonschema>=4.21,<5",
  "types-toml==0.10.8.20240310",
  "types-requests>=2.0,<3",
  "pip-audit>=2.0,<3"
]
google = [
  "google-api-python-client>=2.185.0",
  "google-auth-httplib2>=0.2.0",
  "google-auth-oauthlib>=1.2.2"
]

[tool.pytest.ini_options]
minversion = "8.3"
addopts = "-rs --disable-warnings"
asyncio_mode = "auto"
testpaths = ["tests"]

[tool.black]
line-length = 100
target-version = ["py312"]

[tool.ruff]
target-version = "py312"
line-length = 100
fix = false
exclude = ["migrations/**", "build/**", "node_modules/**", "frontend/**"]
[tool.ruff.lint]
select = ["E", "F", "B"]
ignore = ["E501", "F401", "B011", "B008"]
[tool.ruff.lint.per-file-ignores]
"tests/**" = ["B011"]

[tool.alembic]
script_location = "backend/migrations/alembic"
file_template = "%%(year)d_%%(month).2d_%%(day).2d_%%(hour).2d%%(minute).2d_%%(rev)s_%%(slug)s"
timezone = "UTC"

[tool.setuptools.packages.find]
where = ["."]
include = ["backend*", "agents*", "tools*", "ops*"]
exclude = ["frontend*", "docs*", "data*", "tests*", "artifacts*", "constraints*"]

[tool.mypy]
python_version = "3.12"
warn_unused_configs = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_no_return = true
warn_unreachable = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
no_implicit_optional = true
strict_equality = true
ignore_missing_imports = true
exclude = ["tests"]

[[tool.mypy.overrides]]
module = "backend.apps.inbox.*"
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
warn_return_any = true

[[tool.mypy.overrides]]
module = "agents.inbox_worker.*"
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
warn_return_any = true

[[tool.mypy.overrides]]
module = "tools.mcp.list_tools"
ignore_errors = true

[mypy-list_tools]
ignore_errors = true

# Optional: zentrale Coverage-Konfiguration
# [tool.coverage.run]
# branch = true
# source = ["backend"]
# omit = ["tests/*"]
#
# [tool.coverage.report]
# show_missing = true
# skip_covered = true
# fail_under = 80
